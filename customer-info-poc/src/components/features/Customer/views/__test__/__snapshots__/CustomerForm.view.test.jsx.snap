// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Customer Details View Rendered should renders correctly 1`] = `
<div>
  <form
    autoComplete="off"
  >
    <div
      className="field-container"
    >
      <label>
        Title
      </label>
      <div
        className="field"
      >
        <Field
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "baseHash": 1842686996,
                "componentId": "sc-AxiKw",
                "isStatic": false,
                "rules": Array [
                  "
    ",
                  "
  .error-container {
    background-color: #fff4e9;
    color: black;
    padding: 15px;
    font-size: 18px;
  }

  select {
    border: 1px solid #d8d8d8;
    background-color: white;
    border-radius: 0px;
    outline: 0px;
    padding: 10px;
    width: 100%;
    outline-style: none;
    appearance: none;
    color: #d8d8d8;
    font-size: 18px;
    background: url(/carrot-small-down.png) right 5px bottom 15px no-repeat;
  }
  select:focus {
    border: 1px solid orange;
    outline-style: none;
    color: black;
  }
",
                  ";
  ",
                ],
                "staticRulesId": "",
              },
              "displayName": "Styled(Select)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-AxiKw",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          name="title"
        >
          <option
            defaultChecked={true}
          >
            Select
          </option>
          <option
            value="Mr"
          >
            Mr
          </option>
          <option
            value="Mrs"
          >
            Mrs
          </option>
          <option
            value="Miss"
          >
            Miss
          </option>
        </Field>
      </div>
    </div>
    <div
      className="field-container"
    >
      <label>
        First Name
      </label>
      <div
        className="field"
      >
        <Field
          autoComplete="of"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "baseHash": 640081696,
                "componentId": "sc-AxirZ",
                "isStatic": false,
                "rules": Array [
                  "
    ",
                  "
  .error-container {
    background-color: #fff4e9;
    color: black;
    padding: 15px;
    font-size: 18px;
  }

  input {
    border: 1px solid #d8d8d8;
    background-color: white;
    color: #d8d8d8;
    font-size: 18px;
    padding: 10px;
    width: 100%;
    box-sizing: border-box;
  }

  input:focus {
    border: 1px solid orange;
    outline-style: none;
    color: black;
  }
",
                  ";
  ",
                ],
                "staticRulesId": "",
              },
              "displayName": "Styled(Input)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-AxirZ",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          name="firstName"
          type="text"
        />
      </div>
    </div>
    <div
      className="field-container"
    >
      <label>
        Last Name
      </label>
      <div
        className="field"
      >
        <Field
          autoComplete="of"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "baseHash": 640081696,
                "componentId": "sc-AxirZ",
                "isStatic": false,
                "rules": Array [
                  "
    ",
                  "
  .error-container {
    background-color: #fff4e9;
    color: black;
    padding: 15px;
    font-size: 18px;
  }

  input {
    border: 1px solid #d8d8d8;
    background-color: white;
    color: #d8d8d8;
    font-size: 18px;
    padding: 10px;
    width: 100%;
    box-sizing: border-box;
  }

  input:focus {
    border: 1px solid orange;
    outline-style: none;
    color: black;
  }
",
                  ";
  ",
                ],
                "staticRulesId": "",
              },
              "displayName": "Styled(Input)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-AxirZ",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          name="lastName"
          type="text"
        />
      </div>
    </div>
    <div
      className="field-container"
    >
      <label>
        Has your name changed in the last 12 months?
      </label>
      <div
        className="field"
      >
        <Field
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "baseHash": 2075994405,
                "componentId": "sc-AxhUy",
                "isStatic": false,
                "rules": Array [
                  "
    ",
                  "
  .radioContainer {
    display: flex;
  }

  /* The container */
  .radioLabel {
    margin-bottom: 0px;
    display: block;
    position: relative;
    padding: 5px 15px 5px 35px;
    cursor: pointer;
    font-size: 18px;
  }

  /* Hide the browser's default radio button */
  .radioLabel input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }

  /* Create a custom radio button */
  .checkmark {
    position: absolute;
    top: 3px;
    left: 0;
    height: 30px;
    width: 30px;
    border: 1px solid #d8d8d8;
    border-radius: 50%;
  }

  /* On mouse-over, add a grey background color */
  .radioLabel:hover input ~ .checkmark {
    background-color: #ccc;
  }

  /* When the radio button is checked, add a blue background */
  .radioLabel input:checked ~ .checkmark {
    background-color: rgb(0, 48, 87);
  }

  /* Create the indicator (the dot/circle - hidden when not checked) */
  .checkmark:after {
    content: \\"\\";
    position: absolute;
    display: none;
  }

  /* Show the indicator (dot/circle) when checked */
  .radioLabel input:checked ~ .checkmark:after {
    display: block;
  }

  /* Style the indicator (dot/circle) */
  .radioLabel .checkmark:after {
    top: 9px;
    left: 9px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: white;
  }
",
                  ";
  ",
                ],
                "staticRulesId": "",
              },
              "displayName": "Styled(RadioButtons)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-AxhUy",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          name="nameChanged"
          options={
            Array [
              Object {
                "title": "Yes",
                "value": "yes",
              },
              Object {
                "title": "No",
                "value": "no",
              },
            ]
          }
        />
      </div>
    </div>
    <div
      className="field-container"
    >
      <label>
        Date of Birth
      </label>
      <div
        className="field"
      >
        <Field
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "baseHash": 1845756808,
                "componentId": "sc-AxhCb",
                "isStatic": false,
                "rules": Array [
                  "
    ",
                  "
  .error-container {
    background-color: #fff4e9;
    color: black;
    padding: 15px;
    font-size: 18px;
  }

  input {
    border: 1px solid #d8d8d8;
    background-color: white;
    color: #d8d8d8;
    font-size: 18px;
    padding: 10px;
    width: 100%;
    box-sizing: border-box;
  }

  input:focus {
    border: 1px solid orange;
    outline-style: none;
    color: black;
  }
  .react-datepicker-wrapper {
    width: 100%;
  }
",
                  ";
  ",
                ],
                "staticRulesId": "",
              },
              "displayName": "Styled(DatePickerView)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-AxhCb",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          name="dateOfBirth"
          onChange={[Function]}
          selected={2020-05-18T11:41:46.856Z}
          type="text"
        />
      </div>
    </div>
    <div
      className="btn-Container"
    >
      <styled.button
        className="btnStyle"
        type="submit"
      >
        Save
      </styled.button>
      <styled.button
        className="btnCancel"
      >
        Cancel
      </styled.button>
    </div>
  </form>
</div>
`;
